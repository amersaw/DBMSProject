@model TravelAgency.Model.Hotel

@{
    ViewBag.Title = Model.Name;
    ViewBag.Subtitle = Model.ServiceQuality + " Stars";
}

<div class="row">
    <div class="col-md-6">
        <p>Information</p>
        <div class="list-group">

            <a href="#" class="list-group-item">
                <i class="fa  fa-phone-square   fa-fw"></i> Phone Number
                <span class="pull-right text-muted small">
                    <em>@Model.Tel</em>
                </span>
            </a>
            <a href="#" class="list-group-item">
                <i class="fa fa-comment fa-fw"></i> City
                <span class="pull-right text-muted small">
                    <em>@Model.CityName</em>
                </span>
            </a>
            <a href="#" class="list-group-item">
                <i class="fa fa-comment fa-fw"></i> Province
                <span class="pull-right text-muted small">
                    <em>@Model.ProvinceName</em>
                </span>
            </a>
            <a href="#" class="list-group-item">
                <i class="fa fa-star   fa-fw"></i>Service Quality
                <span class="pull-right text-muted small">
                    <em>@Model.ServiceQuality</em>
                </span>
            </a>
        </div>

    </div>
    <div class="col-md-6">
        <div style="height:200px;">
            <div id="map">

            </div>
        </div>
        @section scripts{
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCrzu7GuhAnOodLklDe5JT9lmtVoeo30yA&callback=initMap" async defer></script>
            <script>
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    
                center: { lat: @Globals.CleanString( Model.Latitude), lng: @Globals.CleanString( Model.Longitude) },
                    zoom: 8
                });
            }
                @*var geocoder;
                var map;

                function initialize() {

                    geocoder = new google.maps.Geocoder();

                    var latlng = new google.maps.LatLng(@Globals.CleanString( Model.Latitude), @Globals.CleanString(Model.Longitude ));
                    var mapOptions = {
                        zoom: 8,
                        center: latlng
                    };

                    map = new google.maps.Map(document.getElementById("map"), mapOptions);

                    // Call the codeAddress function (once) when the map is idle (ready)
                    google.maps.event.addListenerOnce(map, 'idle', codeAddress);
                }

                function codeAddress() {

                    // Define address to center map to
                    var address = '@Model.Latitude, @Model.Longitude';

                    geocoder.geocode({
                        'address': address
                    }, function (results, status) {

                        if (status == google.maps.GeocoderStatus.OK) {

                            // Center map on location
                            map.setCenter(results[0].geometry.location);

                            // Add marker on location
                            var marker = new google.maps.Marker({
                                map: map,
                                position: results[0].geometry.location
                            });

                        } else {

                            alert("Geocode was not successful for the following reason: " + status);
                        }
                    });
                }

                initialize();*@
            </script>
        }

    </div>
</div>